CREATE DATABASE projectman_bd
  WITH OWNER = postgres
       ENCODING = 'UTF8'
       TABLESPACE = pg_default
       LC_COLLATE = 'pt_BR.UTF-8'
       LC_CTYPE = 'pt_BR.UTF-8'
       CONNECTION LIMIT = -1;




CREATE TABLE gerente_de_projeto
(
   id integer NOT NULL, 
   nome character varying(100) NOT NULL, 
   login character varying(100) NOT NULL, 
   senha character varying(255) NOT NULL, 
   data_de_aniversario date, 
   CONSTRAINT pk_gerente_de_projeto PRIMARY KEY (id), 
   CONSTRAINT unique_login_gerente_de_projeto UNIQUE (login)
) 
WITH (
  OIDS = FALSE
)
;
ALTER TABLE gerente_de_projeto OWNER TO postgres;




CREATE TABLE projeto
(
   id integer NOT NULL, 
   nome character varying(100) NOT NULL, 
   orcamento double precision, 
   data_de_cadastro date NOT NULL, 
   descricao text, 
   id_gerente integer NOT NULL, 
   CONSTRAINT pk_projeto PRIMARY KEY (id), 
   CONSTRAINT fk_gerente_de_projeto FOREIGN KEY (id_gerente) REFERENCES gerente_de_projeto (id) ON UPDATE NO ACTION ON DELETE NO ACTION
) 
WITH (
  OIDS = FALSE
)
;
ALTER TABLE projeto OWNER TO postgres;



CREATE TABLE despesa
(
  id integer NOT NULL,
  nome character varying(100) NOT NULL,
  valor double precision NOT NULL,
  descricao text,
  id_projeto integer NOT NULL,
  CONSTRAINT pk_despesa PRIMARY KEY (id ),
  CONSTRAINT fk_projeto FOREIGN KEY (id_projeto)
      REFERENCES projeto (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE despesa
  OWNER TO postgres;


CREATE TABLE recurso
(
  id integer NOT NULL,
  nome character varying(100) NOT NULL,
  descricao text,
  id_projeto integer NOT NULL,
  id_despesa integer NOT NULL,
  CONSTRAINT pk_recurso PRIMARY KEY (id ),
  CONSTRAINT fk_despesa FOREIGN KEY (id_despesa)
      REFERENCES despesa (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_projeto FOREIGN KEY (id_projeto)
      REFERENCES projeto (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE recurso
  OWNER TO postgres;




CREATE TABLE membro
(
  id integer NOT NULL,
  nome character varying(100) NOT NULL,
  login character varying(100) NOT NULL,
  senha character varying(255) NOT NULL,
  data_de_nascimento date,
  funcao character varying(100) NOT NULL,
  CONSTRAINT pk_membro PRIMARY KEY (id ),
  CONSTRAINT unique_login_membro UNIQUE (login )
)
WITH (
  OIDS=FALSE
);
ALTER TABLE membro
  OWNER TO postgres;



CREATE TABLE cronograma
(
   id integer NOT NULL, 
   data_inicio_projeto date NOT NULL, 
   data_limite_projeto date NOT NULL, 
   data_fim date, 
   id_projeto integer NOT NULL, 
   CONSTRAINT pk_cronograma PRIMARY KEY (id), 
   CONSTRAINT fk_projeto_cronograma FOREIGN KEY (id_projeto) REFERENCES projeto (id) ON UPDATE NO ACTION ON DELETE NO ACTION
) 
WITH (
  OIDS = FALSE
)
;
ALTER TABLE cronograma OWNER TO postgres;



CREATE TABLE atividade
(
  id integer NOT NULL,
  data_inicio_atividade date NOT NULL,
  data_limite_atividade date NOT NULL,
  data_fim_atividade date,
  nome_atividade date NOT NULL,
  descricao_atividade text NOT NULL,
  id_projeto integer NOT NULL,
  id_cronograma integer NOT NULL,
  CONSTRAINT pk_atividade PRIMARY KEY (id ),
  CONSTRAINT fk_cronograma_atividade FOREIGN KEY (id_cronograma)
      REFERENCES cronograma (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_projeto_atividade FOREIGN KEY (id_projeto)
      REFERENCES projeto (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE atividade
  OWNER TO postgres;



CREATE TABLE administrador
(
  id integer NOT NULL,
  nome character varying(100) NOT NULL,
  login character varying(100) NOT NULL,
  senha character varying(255) NOT NULL,
  CONSTRAINT pk_administrador PRIMARY KEY (id ),
  CONSTRAINT unique_login_administrador UNIQUE (login )
)
WITH (
  OIDS=FALSE
);
ALTER TABLE administrador
  OWNER TO postgres;




CREATE TABLE log_de_erros
(
  id integer NOT NULL,
  tabela character varying(100) NOT NULL,
  descricao_erro text,
  id_projeto integer NOT NULL,
  CONSTRAINT pk_log_de_erros PRIMARY KEY (id ),
  CONSTRAINT fk_projeto_log FOREIGN KEY (id_projeto)
      REFERENCES projeto (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE log_de_erros
  OWNER TO postgres;



CREATE TABLE cliente
(
  id integer NOT NULL,
  nome character varying(100) NOT NULL,
  login character varying(100) NOT NULL,
  senha character varying(255) NOT NULL,
  CONSTRAINT pk_cliente PRIMARY KEY (id ),
  CONSTRAINT unique_login_cliente UNIQUE (login )
)
WITH (
  OIDS=FALSE
);
ALTER TABLE cliente
  OWNER TO postgres;



CREATE TABLE projeto_cliente
(
  id integer NOT NULL,
  id_projeto integer NOT NULL,
  id_cliente integer NOT NULL,
  CONSTRAINT pk_projeto_cliente PRIMARY KEY (id ),
  CONSTRAINT fk_cliente_proj_cli FOREIGN KEY (id_cliente)
      REFERENCES cliente (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_projeto_proj_cli FOREIGN KEY (id_projeto)
      REFERENCES projeto (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE projeto_cliente
  OWNER TO postgres;



CREATE TABLE formas_de_contato
(
  id integer NOT NULL,
  tipo character varying(100) NOT NULL,
  valor character varying(100) NOT NULL,
  id_cliente integer,
  id_administrador integer,
  id_gerente integer,
  id_membro integer,
  CONSTRAINT pk_formas_de_contato PRIMARY KEY (id ),
  CONSTRAINT fk_administrador_formas_de_contato FOREIGN KEY (id_administrador)
      REFERENCES administrador (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_cliente_formas_de_contato FOREIGN KEY (id_cliente)
      REFERENCES cliente (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_gerente_formas_de_contato FOREIGN KEY (id_gerente)
      REFERENCES gerente_de_projeto (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_membro_formas_de_contato FOREIGN KEY (id_membro)
      REFERENCES membro (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE formas_de_contato
  OWNER TO postgres;



CREATE TABLE mensagem
(
   id integer NOT NULL, 
   assunto character varying(100), 
   texto text NOT NULL, 
   CONSTRAINT pk_mensagem PRIMARY KEY (id)
) 
WITH (
  OIDS = FALSE
)
;
ALTER TABLE mensagem OWNER TO postgres;




CREATE TABLE gerente_mensagem
(
   id integer NOT NULL, 
   data_hora_envio date NOT NULL, 
   id_gerente integer NOT NULL, 
   id_mensagem integer NOT NULL, 
   CONSTRAINT pk_gerente_mensagem PRIMARY KEY (id), 
   CONSTRAINT fk_gerente_ger_mens FOREIGN KEY (id_gerente) REFERENCES gerente_de_projeto (id) ON UPDATE NO ACTION ON DELETE NO ACTION, 
   CONSTRAINT fk_mensagem_ger_mens FOREIGN KEY (id_mensagem) REFERENCES mensagem (id) ON UPDATE NO ACTION ON DELETE NO ACTION
) 
WITH (
  OIDS = FALSE
)
;
ALTER TABLE gerente_mensagem OWNER TO postgres;




CREATE TABLE membro_mensagem
(
  id integer NOT NULL,
  data_hora_envio date NOT NULL,
  id_membro integer NOT NULL,
  id_mensagem integer NOT NULL,
  CONSTRAINT pk_membro_mensagem PRIMARY KEY (id ),
  CONSTRAINT fk_membro_membro_mens FOREIGN KEY (id_membro)
      REFERENCES membro (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_mensagem_membro_mens FOREIGN KEY (id_mensagem)
      REFERENCES mensagem (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE membro_mensagem
  OWNER TO postgres;




CREATE TABLE membro_atividade
(
   id integer NOT NULL, 
   id_membro integer NOT NULL, 
   id_atividade integer NOT NULL, 
   CONSTRAINT pk_membro_atividade PRIMARY KEY (id), 
   CONSTRAINT fk_membro_membro_ativ FOREIGN KEY (id_membro) REFERENCES membro (id) ON UPDATE NO ACTION ON DELETE NO ACTION, 
   CONSTRAINT fk_atividade_membro_ativ FOREIGN KEY (id_atividade) REFERENCES atividade (id) ON UPDATE NO ACTION ON DELETE NO ACTION
) 
WITH (
  OIDS = FALSE
)
;
ALTER TABLE membro_atividade OWNER TO postgres;



CREATE TABLE projeto_membro
(
   id integer NOT NULL, 
   id_projeto integer NOT NULL, 
   id_membro integer NOT NULL, 
   CONSTRAINT pk_projeto_membro PRIMARY KEY (id), 
   CONSTRAINT fk_projeto_proj_membro FOREIGN KEY (id_projeto) REFERENCES projeto (id) ON UPDATE NO ACTION ON DELETE NO ACTION, 
   CONSTRAINT fk_membro_proj_membro FOREIGN KEY (id_membro) REFERENCES membro (id) ON UPDATE NO ACTION ON DELETE NO ACTION
) 
WITH (
  OIDS = FALSE
)
;
ALTER TABLE projeto_membro OWNER TO postgres;

