<?php

require_once $_SERVER['DOCUMENT_ROOT'] . '/ProjetoBanco/codigo/ProjectFree/util/Constants.php';

require_once ROOT_FOLDER . '/util/Util.php';

require_once ROOT_FOLDER . '/util/PostgresConnect.php';

require_once ROOT_FOLDER . '/templates/header.php';
require_once ROOT_FOLDER . '/templates/footer.php';

require_once ROOT_FOLDER . '/entitys/Usuario.php';
require_once ROOT_FOLDER . '/entitys/Projeto.php';
require_once ROOT_FOLDER . '/entitys/Artefato.php';
require_once ROOT_FOLDER . '/entitys/Atividade.php';
require_once ROOT_FOLDER . '/entitys/Fase.php';

class Body {
	private $header;
	private $title;
	private $extraHeader;

	public function __construct() {
		$this->header = new Header();
		$this->header->setTitle($this->title);
		$this->header->setExtraHeader($this->extraHeader);
		$this->init();
		//$this->setHeaderType();
	}

	protected function init() {
		$this->header->loadHead();
		$this->loadBody();
		Footer::loadFooter();
	}

	protected function setHeaderType() {
		$url = $_SERVER['REQUEST_URI'];
		$entity = strtolower(str_replace('Page_', '', get_called_class()));
		if (!$this->checkLogin()) {
			if (strpos($url, '/logged/') !== false) {
				$this->storeloginOnSession(false);
				redirect('/ProjetoBanco/codigo/ProjectFree/application/index.php');
			}
		}
		else if (strpos($url, '/logged/') !== false) {
			$role = $this->getRole();
			session_start();
			$_SERVER['gerente'] = (strtolower($role) == 'gerente') ? true: false;
		}
	}

	protected function salvar() {
		$parameters = array();
		var_dump($parameters)
		foreach ($_POST as $fieldName => $fieldValue) {
			if ($fieldName == 'submit') {
				break;
			}
			$parameters[] = $fieldValue;
		}
		$entity = strtolower(str_replace('Page_', '', get_called_class()));
		$prepare = $pgConnect->prepareFunctionStatement($functionName, count($parameters));
		$retval = $pgConnect->executeFunctionStatement($functionName, $parameters);
		$result = $pgConnect->getResult($retval);

		var_dump($result);
	}

	protected function setTitle($title) {
		$this->title = $title;
	}

	protected function setExtraHeader($extraHeader) {
		$this->extraHeader = $extraHeader;
	}

	public function getUserId() {
		global $userId;
		return isset($userId) ? $userId : null;
	}

	public function getProjectId() {
		global $projectId;
		return isset($projectId) ? $projectId : null;
	}
}
